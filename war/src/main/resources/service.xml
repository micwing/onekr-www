<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- jpa annotation -->
	<jpa:repositories base-package="onekr.**.dao" />

	<!-- jpa entity factory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="onekr.biz.model" />
		<property name="persistenceProvider">
			<bean class="org.hibernate.ejb.HibernatePersistence" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="false" />
				<property name="database">
					<util:constant static-field="org.springframework.orm.jpa.vendor.Database.MYSQL" />
				</property>
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.jdbc.fetch_size">18</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
				<prop key="use_streams_for_binary">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.ejb.event.post-insert">onekr.biz.sys.impl.PostCrudEventListener</prop>
				<prop key="hibernate.ejb.event.post-update">onekr.biz.sys.impl.PostCrudEventListener</prop>
				<prop key="hibernate.ejb.event.post-delete">onekr.biz.sys.impl.PostCrudEventListener</prop>
			</props>
		</property>
	</bean>

	<!-- transactionManager -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- exception advice -->
	<bean id="exceptionAdvice" class="onekr.framework.exception.ExceptionAdvice">
	</bean>

	<!-- aop config -->
	<aop:aspectj-autoproxy proxy-target-class="false" />
	<aop:config proxy-target-class="false">
		<!-- for transaction -->
		<aop:pointcut expression="execution(* onekr.biz..*.*(..))"
			id="servicePointCut" />
		<!-- for transaction -->
		<aop:advisor pointcut-ref="servicePointCut" advice-ref="txAdvice" />
		<!-- warp validationException to AppException -->
		<aop:aspect ref="exceptionAdvice">
			<aop:after-throwing pointcut-ref="servicePointCut"
				method="afterThrowingMethodConstraintViolationException" throwing="ve" />
		</aop:aspect>
	</aop:config>

	<!-- 启用缓存注解功能 -->
	<cache:annotation-driven cache-manager="cacheManager" />

	<!-- 声明cacheManager -->
	<bean id="cacheManager" class="onekr.framework.springframework.cache.ehcache.SimpleEhCacheCacheManager"
		p:cacheManager-ref="ehcache" />

	<!-- cacheManager工厂类，指定ehcache.xml的位置 -->
	<bean id="ehcache"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		p:configLocation="classpath:/ehcache.xml">
		<property name="shared" value="true" />
	</bean>

	<!-- messagesource -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message</value>
			</list>
		</property>
	</bean>

	<!-- validator -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<bean
		class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor">
		<property name="validator" ref="validator" />
	</bean>

	<!-- ExceptionResolver 	-->
	<bean class="onekr.framework.springframework.web.servlet.AppExceptionResolver"></bean>

	<!-- email sender -->
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl" scope="singleton">
		<property name="host" value="${email.sender.host}" />
		<property name="port" value="${email.sender.port}" />
		<property name="username" value="${email.sender.username}" />
		<property name="password" value="${email.sender.password}" />
		<property name="defaultEncoding" value="${email.sender.defaultEncoding}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>
	
	<!-- freemarker -->
	<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="classpath:ftl" /><!--指定模板文件目录 -->
		<property name="freemarkerSettings"><!-- 设置FreeMarker环境属性 -->
			<props>
				<prop key="template_update_delay">1800</prop><!--刷新模板的周期，单位为秒 -->
				<prop key="default_encoding">UTF-8</prop><!--模板的编码格式 -->
				<prop key="locale">zh_CN</prop><!-- 本地化设置 -->
			</props>
		</property>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

</beans>